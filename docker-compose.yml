version: "2.4"

#
# [ services definition ]
#
services:
  pihole:
    container_name: pihole
    build: pihole
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      DNS1: 10.5.0.2
      DNS2: 10.5.0.3
      TZ: ${TIMEZONE:-America/New_York}
      WEBPASSWORD: ${WEBPASSWORD:?"Password for pihole undefined. open .env to set password"}
    volumes:
       - 'pihole_pihole:/etc/pihole/'
       - 'pihole_dnsmasq:/etc/dnsmasq.d/'
       - 'pihole_log:/var/log/'
    dns:
      - 127.0.0.1
      - 192.168.1.1
    restart: always
    networks:
      dnsbridge:
        ipv4_address: 10.5.0.4

  cloudflare-dns-tls:
    container_name: cloudflare-dns-tls
    build: dot
    environment:
      - VERBOSITY=0
      - VERBOSITY_DETAILS=0
      - BLOCK_MALICIOUS=off # BLOCK_MALICIOUS could be turned on
      - LISTENINGPORT=53
      - PROVIDER=cloudflare
    restart: always
    networks:
      dnsbridge:
        ipv4_address : 10.5.0.2

  google-dns-tls:
    container_name: google-dns-tls
    build: dot
    environment:
      - VERBOSITY=0
      - VERBOSITY_DETAILS=0
      - BLOCK_MALICIOUS=off # BLOCK_MALICIOUS could be turned on
      - LISTENINGPORT=53
      - PROVIDER=google
    restart: always
    networks:
      dnsbridge:
        ipv4_address: 10.5.0.3

  portainer:
    container_name: portainer
    build: portainer
    ports:
      - "8443:9000"
      - "8000:8000"
    restart: always
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock

  watcher:
    container_name: watcher
    image: v2tec/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  bench-security:
    container_name: bench-security
    image: docker/docker-bench-security
    cap_add:
        - audit_control
    labels:
        - docker_bench_security
    network_mode: "host"
    pid: host
    stdin_open: true
    tty: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

#
# [ networks definition ]
#
networks:
  dnsbridge:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/16

#
# [ volumes definition ]
#
volumes:
  pihole_pihole:
    driver: local
  pihole_dnsmasq:
    driver: local
  pihole_log:
    driver: local
  portainer_data:
    driver: local